/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from "../api.schema";

import { api } from "../..";
export type ProvidersQueryVariables = Types.Exact<{ [key: string]: never }>;

export type ProvidersQueryResult = {
  __typename?: "Query";
  providers: Array<{
    __typename?: "Provider";
    id: string;
    phone: string;
    user: {
      __typename?: "User";
      id: string;
      firstName: string;
      lastName: string;
      email: string;
      role: Types.UserRole;
      state: Types.UserStatus;
      address?: {
        __typename?: "Address";
        id: string;
        streetNumber: string;
        streetName: string;
        town: string;
        city: string;
        province: string;
        areaCode: string;
      } | null;
    };
    profile: {
      __typename?: "BusinessProfile";
      address: {
        __typename?: "Address";
        id: string;
        streetNumber: string;
        streetName: string;
        town: string;
        city: string;
        province: string;
        areaCode: string;
      };
    };
  }>;
};

export const ProvidersDocument = `
    query providers {
  providers {
    id
    phone
    user {
      id
      firstName
      lastName
      email
      role
      state
      address {
        id
        streetNumber
        streetName
        town
        city
        province
        areaCode
      }
    }
    profile {
      address {
        id
        streetNumber
        streetName
        town
        city
        province
        areaCode
      }
    }
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    providers: build.query<
      ProvidersQueryResult,
      ProvidersQueryVariables | void
    >({
      query: (variables) => ({ document: ProvidersDocument, variables }),
    }),
  }),
});

export { injectedRtkApi as api };
export const { useProvidersQuery, useLazyProvidersQuery } = injectedRtkApi;
