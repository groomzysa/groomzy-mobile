"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

type Address {
  id: Int!
  createdAt: String
  updatedAt: String
  streetNumber: String
  streetName: String
  town: String
  city: String
  province: String
  areaCode: String
}

type Booking {
  id: Int!
  createdAt: String
  updatedAt: String
  bookingTime: String
  inHouse: Boolean
  status: BookingStatus
  provider: Provider
  client: Client
  service: Service
}

enum BookingStatus {
  ACTIVE
  CANCELLED
  DELETED
  DONE
  PENDING
}

type BusinessProfile {
  id: Int!
  tradingName: String
  phone: String
  logoUrl: String
  createdAt: String
  updatedAt: String
  address: Address
}

enum CategoryType {
  BARBER
  HAIRDRESSER
  MAKEUP_ARTIST
  NAIL_TECHNICIAN
  SPA
}

type Client {
  id: Int!
  createdAt: String
  updatedAt: String
  phone: String
  user: User
  bookings: [Booking!]
}

enum DurationUnitType {
  MIN
  HRS
}

scalar File

type Mutation {
  addProvider(tradingName: String!, streetNumber: String!, streetName: String!, town: String!, city: String!, province: String!, areaCode: String!, phone: String!, logo: File): Provider!
  addService(name: String!, description: String!, price: Float!, duration: Float!, durationUnit: DurationUnitType!, inHouse: Boolean!, category: CategoryType!): Service!
  addUser(firstName: String!, lastName: String!, email: String!, password: String!, role: UserRole!, userImage: File): User!
  deleteService(serviceId: Int!): Service!
  signIn(email: String!, password: String!, role: UserRole!): Token!
  updateProvider(providerId: Int!, tradingName: String, streetNumber: String, streetName: String, town: String, city: String, province: String, areaCode: String, phone: String, logo: File): Provider!
  updateService(serviceId: Int!, name: String, description: String, duration: Float, durationUnit: DurationUnitType, inHouse: Boolean, price: Float, category: CategoryType): Service!
}

type Provider {
  id: Int!
  createdAt: String
  updatedAt: String
  user: User
  profile: BusinessProfile
  bookings: [Booking!]
}

type Query {
  providers: [Provider!]!
  services: [Service!]!
  user: User
}

type Service {
  id: Int!
  createdAt: String
  updatedAt: String
  name: String!
  description: String
  duration: Float
  durationUnit: DurationUnitType
  inHouse: Boolean
  price: Float
  category: CategoryType
}

type Subscription {
  updateBooking: String
}

type Token {
  token: String!
}

type User {
  id: Int!
  createdAt: String
  updatedAt: String
  userImageUrl: String
  firstName: String
  lastName: String
  email: String
  state: UserStatus
  role: UserRole
  provider: Provider
  address: Address
}

enum UserRole {
  ADMIN
  CLIENT
  PROVIDER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  PENDING
  SUSPENDED
  DELETED
}

